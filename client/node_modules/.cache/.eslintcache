[{"/Users/macuser/Desktop/clozd app/client/src/index.js":"1","/Users/macuser/Desktop/clozd app/client/src/App.js":"2","/Users/macuser/Desktop/clozd app/client/src/reportWebVitals.js":"3","/Users/macuser/Desktop/clozd app/client/src/components/Details.js":"4","/Users/macuser/Desktop/clozd app/client/src/components/List.js":"5"},{"size":500,"mtime":1640319598162,"results":"6","hashOfConfig":"7"},{"size":504,"mtime":1640320886837,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1640319598169,"results":"9","hashOfConfig":"7"},{"size":1039,"mtime":1640320851240,"results":"10","hashOfConfig":"7"},{"size":1564,"mtime":1640321248620,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"tz5pt4",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/macuser/Desktop/clozd app/client/src/index.js",[],["25","26"],"/Users/macuser/Desktop/clozd app/client/src/App.js",[],"/Users/macuser/Desktop/clozd app/client/src/reportWebVitals.js",[],"/Users/macuser/Desktop/clozd app/client/src/components/Details.js",["27"],"import React from 'react';\nimport {useLocation} from 'react-router-dom';\n \nfunction Details() {\n \n   const location = useLocation();\n   const date = new Date(location.state.dob.date).toLocaleDateString(undefined, { year: \"numeric\", month: \"long\", day: \"numeric\" });\n \n   return(\n       <div>\n           <div>\n               <img src={location.state.picture.large} ></img>\n           </div>\n               <tbody className=\"detailsInfo\">\n                   <tr><strong>Full name:</strong>{location.state.name.first} {location.state.name.last}</tr>\n                   <tr><strong>Email: </strong>{location.state.email}</tr>\n                   <tr><strong>Address: </strong>{location.state.location.street.number} {location.state.location.street.name}, {location.state.location.city} {location.state.location.country}</tr>\n                   <tr><strong>Phone number: </strong>{location.state.cell}</tr>\n                   <tr><strong>Date of Birth: </strong>{date}</tr>\n               </tbody>\n       </div>\n   );\n}\n \nexport default Details;","/Users/macuser/Desktop/clozd app/client/src/components/List.js",["28"],"import React, {useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n \nfunction List() {\n   useEffect( ()=> {\n       fetchItems();\n   }, []);\n \n   const [items, setItems] = useState([]);\n \n   const fetchItems = async() => {\n       const response = await fetch('/all');\n       console.log(response);\n       const data = await response.json();\n       console.log(data);\n       setItems(data.results);\n       \n   }\n  \n   const navigate = useNavigate();\n \n   return(\n       <div>\n           <h1>List of Employees:</h1>\n \n           <table className=\"table\">\n               <thead>\n                   <tr>\n                       <th scope=\"col\">View Employee</th>\n                       <th scope=\"col\">Name</th>\n                       <th scope=\"col\">Email</th>\n                       <th scope=\"col\">City/Country</th>\n                   </tr>\n               </thead>\n               <tbody>\n                   {\n                   items.map(item => (\n                       <tr>\n                       <td><a style={{color: \"blue\"}} onClick={() => {\n                           navigate('/details', {state: item})\n                       }} className=\"nav-item nav-link active\">View</a></td>\n                       <td>{item.name.first} {item.name.last}</td>\n                       <td>{item.email}</td>\n                       <td>{item.location.city}/{item.location.country}</td>\n                   </tr>\n                   ))\n                   }\n               </tbody>\n           </table>\n       </div>\n \n \n   );\n}\n \nexport default List;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":12,"column":16,"nodeType":"35","endLine":12,"endColumn":57},{"ruleId":"36","severity":1,"message":"37","line":39,"column":28,"nodeType":"35","endLine":41,"endColumn":64},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]